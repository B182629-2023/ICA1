#!/bin/bash

set -e

FASTQDATA="/localdisk/data/BPSM/ICA1/fastq" #Path to fastq sequence data files
TCOGENOME="/localdisk/data/BPSM/ICA1/Tcongo_genome/" #Path to reference genome files


#Creates the parent directory 'analysis' and subdirectories needed for the different stages of the analysis
#Copies Tco sample detail file and compressed fastq Tco sequence files into the relevant directories

cd ; mkdir -p analysis/groups analysis/foldcalc analysis/counts analysis/fastqc_output analysis/seq_reads analysis/ref_genome  #-p creates a nested directory
echo "Creating directories"
cp $FASTQDATA/Tco2.fqfiles ~/analysis ; cp -r $FASTQDATA/*.gz ~/analysis/seq_reads #-r copies files reclusively
echo "Copying required files"


#Generates a file showing the Tco samples belonging to each treatment group
#Awk uses contents of generated file to create different files for each group

cd ~/analysis; cut -f 1,2,4,5 Tco2.fqfiles | awk 'NR>1' |  sort -k2,2 -k3,3 -k4,4 > Tco2.fqfiles.sorted #Removes unescessary fields and sorts groups together
awk 'BEGIN{OFS="_"} NR==FNR{a[$2,$3,$4];next}($2,$3,$4) in a{print $1,$2,$3,$4}' Tco2.fqfiles.sorted Tco2.fqfiles.sorted > Tco2.fqfiles.OFS #Joins Tco sample ID to its respective group e.g. Tco480_WT_24_Induced 
awk '{print $1}' Tco2.fqfiles.sorted | awk 'BEGIN{FS="Tco"}{print $2}'  > Tco2.fqfiles.tco #Extracts Tco sample ID only e.g. 480
paste Tco2.fqfiles.OFS Tco2.fqfiles.tco | awk -F"_" 'BEGIN{OFS="_"}{print $2,$3,$4}' > Tco.fqfiles #creates a file with sample ID in $1 and respective group in $2 e.g. WT_24_Induced \t 480
\rm Tco2*
cd ~/analysis/groups; awk -F"\t" '{print>$1;}' ~/analysis/Tco.fqfiles #Creates different files for each treatment group e.g WT_24_Induced containing the Tco samples of the respective group 




#Creates a directory for each treatment group

for file in ~/analysis/groups/*; do
	groupdir=$(basename $file)
	mkdir "$groupdir"_dir
	\mv $file "$groupdir"_dir
done

#Creates a file for each Tco sample in its respective group directory

for file in ~/analysis/groups/*dir/*; do
	group=$(basename $file)
	cd ~/analysis/groups/${group}_dir
	awk '{print>$2;}' $file
	\rm $file
done




#Runs a quality check on fastq files and directs output to the fastqc output directory
#Unzips compressed gzipped files into seq_reads directory

echo "Starting FASTQC analysis..."
cd ~/analysis/seq_reads
fastqc -q *gz -o ~/analysis/fastqc_output/
echo "FASTQC analysis complete"
gunzip *.gz
cd ~/analysis/fastqc_output



#Creates a for loop where all zip files generated by fastqc are unzipped in the output directory

for file in ~/analysis/fastqc_output/*.zip; do
	unzip -q $file
done

echo "All FASTQ zip files unzipped in ~/analysis/fastqc_output/"

\rm ~/analysis/fastqc_output/*.zip
\rm ~/analysis/fastqc_output/*.html




#Creates a for loop where awk assess the basic statistics generated by fastqc
#Output of detected fails are passed to a text file

for file in ~/analysis/fastqc_output/*fastqc
do
	awk 'BEGIN{FS="\t";}{
	if ($2 != "Per base sequence content" && ($1 == "FAIL" || $1 == "WARN")) #Note that Per base sequence content always gives FAIL or WARN for RNA-seq data
		{print $0 ;}
	}' $file/summary.txt > ~/analysis/fastqc_output/failed.txt
done



#Detects if text file is empty i.e. there are no fails (except per base sequence content)

if grep -q . failed.txt #grep -q instructs grep to exit when any character is detected (. is an expression matching any character) - indicates file contains FAILS
then
	echo "Fastqc report generated - Failed statistics detected - see failed.txt";
else
	echo "Fastqc report generated - No fails to report"; #If no characters are found i.e. file is empty
fi



#Creates a full fastqc report containing basic statistics of all Tco samples

for file in ~/analysis/fastqc_output/*fastqc
do
	awk 'NR>1' $file/summary.txt | sort -d -k2,2 > ~/analysis/fastqc_output/fastqc_report.txt
done

echo "To view full generated FASTQC report see fastqc_report.txt"



